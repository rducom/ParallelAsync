name: .NET Core
on:
  push:
    tags:
      - '**'
    branches:
      - master
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - run: git fetch --prune --unshallow

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.302

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.4
      with:
          versionSpec: '5.3.7'

    - name: Use GitVersion
      id: gitversion # step id used as reference for output values
      uses: gittools/actions/gitversion/execute@v0.9.4

    - name: Setup SonarScanner
      run: dotnet tool install --tool-path artifacts dotnet-sonarscanner

    - name: Setup ReportGenerator
      run: dotnet tool install --global dotnet-reportgenerator-globaltool

    - name: SonarScanner begin
      run: artifacts/dotnet-sonarscanner begin /k:"ParallelAsync" /o:"rducom-github" /d:sonar.login=${{ secrets.SONAR_TOKEN }} /d:sonar.host.url="https://sonarcloud.io/" /d:sonar.coverageReportPaths="./sonarCoverage/SonarQube.xml"

    - name: Test
      run: dotnet test --configuration Release --collect:"XPlat Code Coverage" --settings coverlet.runsettings --results-directory:./coverage

    - name: Merge coverages
      run: reportgenerator -reports:./coverage/*/*.xml -targetdir:./sonarCoverage -reporttypes:SonarQube

    - name: SonarScanner end
      run: artifacts/dotnet-sonarscanner end /d:sonar.login=${{ secrets.SONAR_TOKEN }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Nuget
      run: sed 's/GITHUB_TOKEN/${{ secrets.GITHUB_TOKEN }}/g' .nuget.config > nuget.config

    - name: Pack
      run: dotnet pack --configuration Release -o artifacts -p:PackageVersion=${{ steps.gitversion.outputs.nuGetVersionV2 }}

    - name: Nuget prerelease push
      run: dotnet nuget push artifacts/*.nupkg -s github --skip-duplicate

    - name: Nuget org push
      if: startsWith(github.ref, 'refs/tags/')
      run: echo "Tag detected"

    - name: Dump ref
      run: echo ${{github.ref}}
